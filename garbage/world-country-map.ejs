
<% title = "World Country Map" %>
<% dependsOn( ["d3.v3", "topojson"]); %>

<% description = "World Country Map" %>
<% keywords = "world,country,map" %>

<style type="text/css">
    .country {
        cursor: pointer;
    }
    .answer{
        border-bottom: 3px solid black;
        display: inline-block;
        min-width:200px;
    }
    #indication{
        line-height: 30px;
        max-height: 30px;
    }
    svg{
        /*position: absolute !important;*/
        /*top: 0px;*/
        border: 2px black solid;
    }
</style>
<h1><%=title%></h1>
<p id="indication">The country is <span class="answer"><b>{{ countryName }}</b></span></p>
<div id="stage"></div>
<script>

    var color = d3.scale.linear().domain([-0.2, 0.33, 0.66, 1]).range(["lightcoral", "lightyellow", "lightgreen", "lightblue"]);

    function rand_color(){
//        var r = Math.floor( Math.random() * 255 ).toString(16);
//        var g = Math.floor( Math.random() * 255 ).toString(16);
//        var b = Math.floor( Math.random() * 255 ).toString(16);
//        return "#" + r + g + b;
        return color(Math.random());
    }

    // メルカトル図法は投影方法上、そもそも北極点や南極点を描画できないので、適当な緯度で切るしかない。
    // 緯度を決めてそこからアスペクト比を割り出してもいいが、最初からサイズを決めてしまっても同じこと。
    var width = 900;
    var height = 500;

    var svg = d3.select("#stage").append("svg")
            .attr("width", width)
            .attr("height", height);

    var projection = d3.geo.mercator()
            .center([0, 0])
            .scale(100)
            .translate([width / 2, height / 2]);

    projection = d3.geo.mercator()
            .rotate([205,0]) // 3 dimentional rotation. set Japan as center
            .translate([width * 0.5, height * 0.65]) // 赤道を中心にすると南極が大きく入りすぎてバランスが悪い
            .scale(width / ( Math.PI * 2 ) );

    var path = d3.geo.path().projection(projection);
    
    $(function () {
        d3.json("../data/ne_110m_admin_0_countries.geo.json", function (error, json) {
//            var topo = topojson.object(japan, japan.objects.pref).geometries; // <= old syntax
            console.log(d3.geo.bounds(json)); // [​[left, bottom], [right, top]​]

            //left is the minimum longitude, 
            // bottom is the minimum latitude, 
            // right is maximum longitude, 
            // top is the maximum latitude.
            
            svg.selectAll('path')
                    .data(json.features)
                    .enter()
                    .append('path')
                    .attr('d', path)
                    .attr('stroke', '#00ac97')
                    .attr('stroke-width', 0.5)
                    .classed("country", true)
                    .style('fill', function(d){
                        console.log(d);
                        return rand_color();
                    })
                    .on("mouseover", function (d) {
                        d3.select(this).attr({
                            stroke: "red",
                            'stroke-width': 1
                        });
                        indication.countryName = d.properties.name + "(" + d.properties.formal_en + ")";
                    })
                    .on("mouseout", function () {
                        d3.select(this).attr({
//                            fill: "transparent",
                            stroke: "darkgrey",
                            'stroke-width': 0.5
                        });
                        indication.countryName = "";
                    });
        });
    });
    
</script>
<script>
    var indication = new Vue({
        el: '#indication',
        data: {
            countryName: ""
        }
    });
</script>


