<%- include('../_lib') %>
<% title = "liquid in circle graph" %>
<% dependsOn(title, ["jquery", "semantic-ui-range", "underscore", "vue"]); %>

<% description = "Liquid in Circle Graph" %>
<% image = "demo/img/liquid-in-circle-graph.png" %>

<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">

<style>
    div [class*="left floated"] {
        float: left;
        margin-left: 1em;
    }
    #range{
        width:300px;
        margin-bottom: 10px;
    }
</style>

<div class="container">
    <div class="row">
        <h1><%=title%></h1>
        <div class="left floated">
            <canvas id="canvas" width="280px" height="350px">
                Your browser does not support HTML5 canvas.
            </canvas>
        </div>
        <div class="left floated">
            <canvas id="canvas2" width="280px" height="350px">
                Your browser does not support HTML5 canvas.
            </canvas>
        </div>
        <div class="left floated">
            <p id="indication">Ratio: <b>{{ ratio }}</b> %</p>
            <div class="ui range" id="range"></div>
        </div>
    </div>
    <br>
    <div class="row" style="clear: left;">
        <p>'ratio' is corresponding to the water area precisely. Details: <a href="https://github.com/hitokun-s/playground-math/blob/master/liquid_in_circle.py">here.</a></p>
    </div>
</div>

<script>
    
    var diff = 0;
    var ratio = 0;

    $.getJSON("data/liquid_in_circle.json", function(data) {
        console.log(data);

        // 単位円に対する波
        var wave = function(x){
//            diff = ratio * 2 - 1;
            return Math.sin(Math.PI * x) / 8 + diff;
        };
        
        var canvas = document.getElementById('canvas');
        var ctx = canvas.getContext('2d');

        var canvas2 = document.getElementById('canvas2');
        var ctx2 = canvas2.getContext('2d');
        
        var img = new Image();
        img.src = "img/drop2x.png";
        img.onload = function(){
            
            var draw = function(ctx, x, y, R){
                
                var innerRadius = R * 100 / 127;

                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
                ctx.lineWidth = 1;
                ctx.fillStyle = "lightblue";

                ctx.save();
                ctx.translate(x, y);

                ctx.beginPath();

                ctx.moveTo(-innerRadius, - wave(-1) * innerRadius);
                for(var i = -innerRadius + 1; i <= innerRadius;i++){
                    ctx.lineTo(i, - wave(parseFloat(i) / innerRadius) * innerRadius);
                }
                ctx.lineTo(innerRadius, innerRadius);
                ctx.lineTo(-innerRadius, innerRadius);
                ctx.fill();

                ctx.beginPath();

                ctx.arc(0, 0, innerRadius, 0, Math.PI * 2, false);
                ctx.globalCompositeOperation = 'destination-in';
                ctx.fill();
                ctx.globalCompositeOperation = 'source-over'; // set default
                ctx.drawImage(img, - R * 123 / 127, - R * 215 / 127, R * 2, img.height * R * 2 / img.width);

                ctx.restore();
            };

            $('#range').range({
                min: 0,
                max: 100,
                start: 50,
                onChange: function(val){
                    ratio = val / 100;
                    indication.ratio = val;
                    var target = _.min(data, function(d){
                        return Math.abs(ratio - d[1]);
                    });
                    diff = target[0];
                    console.log("diff", diff);
                    console.log("ratio", target[1]);
                    draw(ctx, 140, 220, 127);
                    draw(ctx2, 140, 220, 80);
                }
            });
        };
        
    });

    var indication = new Vue({
        el: '#indication',
        data: {
            ratio: 50
        }
    });
</script>