<% title = "Color Tones" %>
<% dependsOn( ["vue.v2", "underscore", "axios", "d3.v4"]); %>

<h1><%= title %></h1>

<style>

  @keyframes rotation {
    from {
      transform: perspective(550px) rotateX(70deg) rotateZ(0deg);
    }
    to {
      transform: perspective(550px) rotateX(70deg) rotateZ(360deg);
    }
  }

  svg {
    stroke: white;
    stroke-width: 5px;
    -webkit-transition-property: transform;
    -webkit-transition-duration: 2.5s;
    transition-property: transform;
    transition-duration: 2.5s;
    transform: perspective(350px) rotateX(70deg);
    animation-name: rotation;
    animation-duration: 8s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    position: absolute;
    top: -198px;
    left: 72px;
  }

  .css-3d-holder {
    transform-style: preserve-3d;
    position: relative;
    height: 76px;
  }
</style>

<div id="stage">
  <hoge v-for="tone in tones" :data="tone" />
</div>

<template id="tone-graph-template">
  <div class="css-3d-holder">
    <p>{{data.name}}</p>
    <svg width="400" height="400" ref="svg"/>
  </div>
</template>

<script>

  // refs: https://medium.com/js-dojo/7-ways-to-define-a-component-template-in-vuejs-c04e0c72900d

  Vue.component('hoge', {
    props: ["data"],
    mounted: function(){
      const svg = this.$refs.svg;
      show(svg, this.data.colors.map(function(d){return d.code;}));
      setTimeout(function(){
        // d3.select(svg).style("transform", "perspective(350px) rotateX(70deg) rotateZ(60deg)");
      }, 0);
      d3.selectAll(".css-3d-holder").each(function(d, i){
        d3.select(this).style("z-index", 100 -i);
      });
    },
    template: '#tone-graph-template'
  });

  const show = function(elm, colors){
    var svg = d3.select(elm),
        width = +svg.attr("width"),
        height = +svg.attr("height"),
        radius = Math.min(width, height) / 2,
        g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

    var color = d3.scaleOrdinal(colors);

    var pie = d3.pie()
    .sort(null)
    .value(function(d) { return 1; });

    var path = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(120);

    var label = d3.arc()
    .outerRadius(radius - 40)
    .innerRadius(radius - 40);

    var arc = g.selectAll(".arc")
    .data(pie(colors))
    .enter().append("g")
    .attr("class", "arc");

    arc.append("path")
    .attr("d", path)
    .attr("visibility", "hidden")
    .attr("fill", function(d) { return d.data; })
    .transition()
    .delay(function(d, i) {
      return i * 40;
    })
    .attr("visibility", "visible")
    //
    // arc.append("text")
    // .attr("transform", function(d) { return "translate(" + label.centroid(d) + ")"; })
    // .attr("dy", "0.35em")
    // .text(function(d) { return d.data.age; });

  }


</script>

<div id="main" class="ui">
</div>

<!--<script  src="sinhalese/dist/main.js"></script>-->

<script>
    axios.get("data/tones.json").then(function(res){
      console.log(res.data);
      new Vue({
        el: "#stage",
        data: {
          tones: res.data
        }
      });
    })
</script>
